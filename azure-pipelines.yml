# This file defines the build pipeline to build SymCrypt in Azure Dev Ops. It defines multiple jobs
# for building and testing SymCrypt in each of the target environments. For more information on Azure
# Pipelines, see https://docs.microsoft.com/en-us/azure/devops/pipelines/customize-pipeline

# Execute the pipeline whenever a change is made to master or publish
trigger:
- master
- publish

# Execute the pipeline on any PR into master or publish.
# (Currently not supported on Azure Git Repos; must be configured through the UI.)
pr:
- master
- publish

# List of jobs to build. Each job follows the same general format.
# 1. Windows AMD64 with CPU optimizations in Debug mode
# 2. Windows AMD64 with CPU optimizations in Release mode
# 3. Windows X86 with CPU optimizations in Debug mode
# 4. Windows X86 with CPU optimizations in Release mode
# 5. Linux AMD64 with CPU optimizations using GCC in Debug mode
# 6. Linux AMD64 with CPU optimizations using GCC in Sanitize mode
# 7. Linux AMD64 with CPU optimizations using GCC in Release mode
# 8. Linux AMD64 with CPU optimizations using clang in Debug mode
# 9. Linux AMD64 with CPU optimizations using clang in Sanitize mode
# 10. Linux AMD64 with CPU optimizations using clang in Release mode

# The following jobs assume running on an AMD64 host, install cross compilation tools for Arm64 and runs a subset of units tests in QEMU
# 11. Linux Arm64 with CPU optimizations using clang in Debug mode
# 12. Linux Arm64 with CPU optimizations using clang in Release mode

# The following jobs only run the unit tests on CI and PRs to publish (they are always built)
# 13. Windows 64b with no CPU optimizations in Release mode
# 14. Windows 32b with no CPU optimizations in Release mode
# 15. Linux 64b with no CPU optimizations using GCC in Release mode
# 16. Linux 64b with no CPU optimizations using clang in Release mode
# 17. Linux 32b with no CPU optimizations using GCC in Release mode

jobs:
- job: Windows_AMD64_Debug
  pool:
    vmImage: 'windows-2019' # Windows Server 2019 with Visual Studio 2019
  steps:
  - template: azure-build-template.yml
    parameters:
      hostos: Windows
      arch: AMD64
      asmEnabled: ON
      fipsEnabled: OFF
      cc: cl
      cxx: cl
      buildType: Debug
      additionalCMakeArgs: -DSYMCRYPT_INTERNAL_BUILD=1

- job: Windows_AMD64_Release
  pool:
    vmImage: 'windows-2019'
  steps:
  - template: azure-build-template.yml
    parameters:
      hostos: Windows
      arch: AMD64
      asmEnabled: ON
      fipsEnabled: OFF
      cc: cl
      cxx: cl
      buildType: Release
      additionalCMakeArgs: -DSYMCRYPT_INTERNAL_BUILD=1

- job: Windows_x86_Debug
  pool:
    vmImage: 'windows-2019'
  steps:
  - template: azure-build-template.yml
    parameters:
      hostos: Windows
      arch: X86
      asmEnabled: ON
      fipsEnabled: OFF
      cc: cl
      cxx: cl
      buildType: Debug
      additionalCMakeArgs: -DSYMCRYPT_INTERNAL_BUILD=1 -A Win32
  timeoutInMinutes: 90

- job: Windows_x86_Release
  pool:
    vmImage: 'windows-2019'
  steps:
  - template: azure-build-template.yml
    parameters:
      hostos: Windows
      arch: X86
      asmEnabled: ON
      fipsEnabled: OFF
      cc: cl
      cxx: cl
      buildType: Release
      additionalCMakeArgs: -DSYMCRYPT_INTERNAL_BUILD=1 -A Win32
  timeoutInMinutes: 90

- job: Linux_AMD64_gcc_Debug
  pool:
    vmImage: 'ubuntu-20.04'
  steps:
  - template: azure-build-template.yml
    parameters:
      hostos: Linux
      arch: AMD64
      asmEnabled: ON
      fipsEnabled: ON
      cc: gcc
      cxx: g++
      buildType: Debug

- job: Linux_AMD64_gcc_Sanitize
  pool:
    vmImage: 'ubuntu-20.04'
  steps:
  - template: azure-build-template.yml
    parameters:
      hostos: Linux
      arch: AMD64
      asmEnabled: ON
      fipsEnabled: OFF
      cc: gcc
      cxx: g++
      buildType: Sanitize

- job: Linux_AMD64_gcc_Release
  pool:
    vmImage: 'ubuntu-20.04'
  steps:
  - template: azure-build-template.yml
    parameters:
      hostos: Linux
      arch: AMD64
      asmEnabled: ON
      fipsEnabled: ON
      cc: gcc
      cxx: g++
      buildType: Release

- job: Linux_AMD64_clang_Debug
  pool:
    vmImage: 'ubuntu-20.04'
  steps:
  - template: azure-build-template.yml
    parameters:
      hostos: Linux
      arch: AMD64
      asmEnabled: ON
      fipsEnabled: ON
      cc: clang
      cxx: clang++
      buildType: Debug

- job: Linux_AMD64_clang_Sanitize
  pool:
    vmImage: 'ubuntu-20.04'
  steps:
  - template: azure-build-template.yml
    parameters:
      hostos: Linux
      arch: AMD64
      asmEnabled: ON
      fipsEnabled: OFF
      cc: clang
      cxx: clang++
      buildType: Sanitize

- job: Linux_AMD64_clang_Release
  pool:
    vmImage: 'ubuntu-20.04'
  steps:
  - template: azure-build-template.yml
    parameters:
      hostos: Linux
      arch: AMD64
      asmEnabled: ON
      fipsEnabled: ON
      cc: clang
      cxx: clang++
      buildType: Release

- job: Linux_QEMU_ARM64_clang_Debug
  pool:
    vmImage: 'ubuntu-20.04'
  steps:
  - template: azure-build-template.yml
    parameters:
      hostos: Linux
      arch: ARM64
      asmEnabled: ON
      fipsEnabled: ON
      cc: clang
      cxx: clang++
      buildType: Debug
      additionalCMakeArgs: --toolchain=../cmake-configs/Toolchain-Clang-ARM64.cmake
      emulator: qemu-aarch64

- job: Linux_QEMU_ARM64_clang_Release
  pool:
    vmImage: 'ubuntu-20.04'
  steps:
  - template: azure-build-template.yml
    parameters:
      hostos: Linux
      arch: ARM64
      asmEnabled: ON
      fipsEnabled: ON
      cc: clang
      cxx: clang++
      buildType: Release
      additionalCMakeArgs: --toolchain=../cmake-configs/Toolchain-Clang-ARM64.cmake
      emulator: qemu-aarch64

- job: Windows_Win64_Release_NoAsm
  pool:
    vmImage: 'windows-2019'
  steps:
  - template: azure-build-template.yml
    parameters:
      hostos: Windows
      arch: AMD64
      asmEnabled: OFF
      fipsEnabled: OFF
      cc: cl
      cxx: cl
      buildType: Release
      testInPrBuild: false
  timeoutInMinutes: 120

- job: Windows_Win32_Release_NoAsm
  pool:
    vmImage: 'windows-2019'
  steps:
  - template: azure-build-template.yml
    parameters:
      hostos: Windows
      arch: X86
      asmEnabled: OFF
      fipsEnabled: OFF
      cc: cl
      cxx: cl
      buildType: Release
      additionalCMakeArgs: -A Win32
      testInPrBuild: false
  timeoutInMinutes: 120

- job: Linux_64bit_gcc_Release_NoAsm
  pool:
    vmImage: 'ubuntu-20.04'
  steps:
  - template: azure-build-template.yml
    parameters:
      hostos: Linux
      arch: AMD64
      cc: gcc
      cxx: g++
      buildType: Release
      testInPrBuild: false
  timeoutInMinutes: 120

- job: Linux_64bit_clang_Release_NoAsm
  pool:
    vmImage: 'ubuntu-20.04'
  steps:
  - template: azure-build-template.yml
    parameters:
      hostos: Linux
      arch: AMD64
      asmEnabled: OFF
      fipsEnabled: OFF
      cc: clang
      cxx: clang++
      buildType: Release
      testInPrBuild: false
  timeoutInMinutes: 120

- job: Linux_32bit_gcc_Release_NoAsm
  pool:
    vmImage: 'ubuntu-20.04'
  steps:
  - template: azure-build-template.yml
    parameters:
      hostos: Linux
      arch: X86
      asmEnabled: OFF
      fipsEnabled: OFF
      cc: gcc
      cxx: g++
      buildType: Release
      testInPrBuild: false
  timeoutInMinutes: 240